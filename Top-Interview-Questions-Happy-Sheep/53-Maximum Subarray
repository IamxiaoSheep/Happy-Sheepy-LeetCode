class Solution {
//     public int maxSubArray(int[] nums) {
        
//         int n = nums.length;
//         int sum = 0;
//         int[] dp = new int[n];
//         dp[0] = nums[0];
//         int max = dp[0];
        
//         for(int a = 1; a < n; a++) {
//             dp[a] = nums[a] + (dp[a-1] > 0 ? dp[a-1] : 0);
//             max = Math.max(max, dp[a]);
            
//         }
        
        
//         return max;
        
//     }
    public static int maxSubArray(int[] A) {
    int maxSoFar=A[0], maxEndingHere=A[0];
    for (int i=1;i<A.length;++i){
    	maxEndingHere= Math.max(maxEndingHere+A[i],A[i]);
    	maxSoFar=Math.max(maxSoFar, maxEndingHere);	
    }
    return maxSoFar;
}
}